{
  "compilerOptions": {
    "target": "ES6", // 컴파일된 JS 코드가 ES6 문법을 따르도록 설정
    "lib": ["dom", "dom.iterable", "esnext"], // DOM 및 최신 JS 기능 사용 가능하게 함
    "allowJs": true, // JS 파일도 TypeScript와 함께 사용할 수 있도록 허용
    "skipLibCheck": true, // 외부 라이브러리의 타입 검사 건너뛰기 (빌드 속도 개선)
    "strict": true, // 모든 엄격한 타입 검사 옵션 활성화 (안정성 강화)
    "strictNullChecks": true, // null 및 undefined에 대한 엄격한 타입 검사 수행
    "noEmit": true, // 실제 JS 파일로 컴파일하지 않고 타입 검사만 수행
    "esModuleInterop": true, // CommonJS 모듈을 ES 모듈처럼 임포트 가능하게 함
    "module": "NodeNext", // Node.js 환경에 최적화된 모듈 시스템 사용
    "moduleResolution": "node", // Node.js 방식으로 모듈을 해석 (import 경로 처리 방식)
    "baseUrl": ".", // 프로젝트 루트를 기준으로 모듈 경로 설정
    "resolveJsonModule": true, // JSON 파일을 import할 수 있도록 허용
    "isolatedModules": true, // 모든 파일을 독립적인 모듈로 취급 (Next.js 필수 설정)
    "forceConsistentCasingInFileNames": true, // 파일 이름의 대소문자 일관성 검사 (크로스 플랫폼 오류 방지)
    "jsx": "preserve", // JSX를 변환하지 않고 그대로 유지 (Next.js가 처리)
    "incremental": true, // 변경된 파일만 다시 빌드하여 빌드 속도 개선
    "plugins": [
      {
        "name": "next" // Next.js 전용 TypeScript 플러그인 활성화 (자동 최적화 기능 제공)
      }
    ],
    "paths": {
      "@components/*": ["components/*"] // @components로 시작하는 경로를 components 폴더로 매핑 (경로 간소화)
    }
  },
  "include": [
    "next-env.d.ts", // Next.js 환경 변수 타입 정의 파일 포함
    "**/*.ts",       // 모든 TypeScript 파일 포함
    "**/*.tsx",      // 모든 TypeScript React 파일 포함
    ".next/types/**/*.ts" // Next.js 빌드 후 생성된 타입 정의 파일 포함
  ],
  "exclude": [
    "node_modules" // node_modules 폴더는 타입 검사에서 제외 (성능 최적화)
  ]
}